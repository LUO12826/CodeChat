<UserControl
    x:Class="CAC.client.CustomControls.Navigator"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cc="using:CAC.client.CustomControls"
    xmlns:con="using:CAC.client.Converters"
    xmlns:mtuc="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    Background="Aqua"
    d:DesignHeight="500"
    d:DesignWidth="60">

    <UserControl.Resources>
        <con:DoubleToGridLength x:Key="DoubleToGridLength"/>
        <con:BoolToVisibility x:Key="BoolToVisibility"/>
        <Style x:Key="NavigatorListViewItemContainerStyle" TargetType="ListViewItem">
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="Background" Value="{ThemeResource ListViewItemBackground}"/>
            <Setter Property="Foreground" Value="{ThemeResource ListViewItemForeground}"/>
            <Setter Property="TabNavigation" Value="Local"/>
            <Setter Property="IsHoldingEnabled" Value="True"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="MinHeight" Value="{ThemeResource ListViewItemMinHeight}"/>
            <Setter Property="AllowDrop" Value="False"/>
            <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
            <Setter Property="FocusVisualMargin" Value="0"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Padding" Value="0 10 0 10"/>
            <Setter Property="Height" Value="60"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <ListViewItemPresenter x:Name="Root" CheckBrush="{ThemeResource ListViewItemCheckBrush}" 
                                               ContentMargin="{TemplateBinding Padding}" 
                                               CheckBoxBrush="{ThemeResource ListViewItemCheckBoxBrush}" 
                                               ContentTransitions="{TemplateBinding ContentTransitions}" 
                                               CheckMode="{ThemeResource ListViewItemCheckMode}" 
                                               DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}" 
                                               DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}" 
                                               DragBackground="{ThemeResource ListViewItemDragBackground}" 
                                               DragForeground="{ThemeResource ListViewItemDragForeground}" 
                                               FocusBorderBrush="{ThemeResource ListViewItemFocusBorderBrush}" 
                                               FocusVisualMargin="{TemplateBinding FocusVisualMargin}" 
                                               FocusSecondaryBorderBrush="{ThemeResource ListViewItemFocusSecondaryBorderBrush}" 
                                               HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                               Control.IsTemplateFocusTarget="True" 
                                               PressedBackground="{ThemeResource ListViewItemBackgroundPressed}" 
                                               PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackground}" 
                                               PointerOverForeground="{ThemeResource ListViewItemForegroundPointerOver}" 
                                               PointerOverBackground="{ThemeResource ListViewItemBackgroundPointerOver}" 
                                               RevealBorderThickness="{ThemeResource ListViewItemRevealBorderThemeThickness}" 
                                               ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" 
                                               RevealBorderBrush="{ThemeResource ListViewItemRevealBorderBrush}" 
                                               RevealBackground="{ThemeResource ListViewItemRevealBackground}" 
                                               SelectedForeground="{ThemeResource ListViewItemForegroundSelected}" 
                                               SelectionCheckMarkVisualEnabled="{ThemeResource ListViewItemSelectionCheckMarkVisualEnabled}" 
                                               SelectedBackground="Transparent" 
                                               SelectedPressedBackground="{ThemeResource ListViewItemBackgroundSelectedPressed}" 
                                               SelectedPointerOverBackground="{ThemeResource ListViewItemBackgroundSelectedPointerOver}" 
                                               VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="Selected">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(Content.Foreground)" Value="{ThemeResource SystemAccentColor}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="PointerOver"/>
                                            <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPointerOver}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PointerOverSelected">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="PointerOver"/>
                                            <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPointerOver}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PointerOverPressed">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="Pressed"/>
                                            <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPressed}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="Pressed"/>
                                            <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPressed}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PressedSelected">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="Pressed"/>
                                            <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPressed}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DisabledStates">
                                    <VisualState x:Name="Enabled"/>
                                    <VisualState x:Name="Disabled">
                                        <VisualState.Setters>
                                            <Setter Target="Root.RevealBorderThickness" Value="0"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </ListViewItemPresenter>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <DataTemplate x:DataType="cc:NavigatorItem" x:Key="NavigatorListItem">
            <Grid Tag="{x:Bind Tag}">
                <Rectangle Height="28" Width="5" HorizontalAlignment="Left"
                                   Visibility="{x:Bind Selected, Mode=OneWay, Converter={StaticResource BoolToVisibility}}" 
                                   Fill="{ThemeResource SystemAccentColor}"/>
                <SymbolIcon Symbol="{x:Bind Symbol, Mode=OneWay}"/>
            </Grid>
        </DataTemplate>
    </UserControl.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition x:Name="topBlankRow" 
                                       Height="32"/>
            <RowDefinition x:Name="avatarRow" 
                                       Height="{x:Bind Width, Mode=OneTime, Converter={StaticResource DoubleToGridLength}}"/>
            <RowDefinition x:Name="naviButtonsListRow" 
                                       Height="*"/>
            <RowDefinition x:Name="bottomButtonsRow" 
                                       Height="{x:Bind Width, Mode=OneTime, Converter={StaticResource DoubleToGridLength}}"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="1">
            <mtuc:ImageEx x:Name="avatar" Margin="10" CornerRadius="50" Source="{x:Bind Avatar, Mode=OneWay}" 
                          Tapped="avatar_Tapped" Tag="avatar"/>

        </Grid>
        <ListView x:Name="naviItemList" Grid.Row="2" Margin="0 10 0 0"
                  ItemsSource="{x:Bind naviItem}"
                  ItemTemplate="{StaticResource NavigatorListItem}"
                  ItemContainerStyle="{StaticResource NavigatorListViewItemContainerStyle}"
                  IsItemClickEnabled="True" ItemClick="naviItemList_ItemClick" 
                  SelectionChanged="naviItemList_SelectionChanged">

        </ListView>

        <ListView x:Name="additionItemList" Grid.Row="3"
                  ItemsSource="{x:Bind additionalItem}"
                  ItemTemplate="{StaticResource NavigatorListItem}"
                  ItemContainerStyle="{StaticResource NavigatorListViewItemContainerStyle}"
                  IsItemClickEnabled="True" ItemClick="naviItemList_ItemClick"
                  SelectionChanged="additionItemList_SelectionChanged">
            
        </ListView>
    </Grid>
</UserControl>
